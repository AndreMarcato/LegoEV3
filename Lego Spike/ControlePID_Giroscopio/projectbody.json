{"main":"#!/usr/bin/env python3\nfrom ev3dev2.motor import LargeMotor,OUTPUT_B,OUTPUT_C,SpeedPercent,MoveTank\nfrom ev3dev2.sensor import INPUT_1, INPUT_4, INPUT_2\nfrom ev3dev2.sensor.lego import TouchSensor, UltrasonicSensor,GyroSensor\nfrom ev3dev2.led import Leds\nfrom ev3dev2.sound import Sound\nfrom ev3dev2.button import Button\n\nimport time, csv\nimport motor_pair\nfrom hub import port, motion_sensor\n\npair1 = motor_pair.PAIR_1\nmotor_pair.pair(pair1,port.C,port.D)\nmotion_sensor.set_yaw_face(motion_sensor.FRONT)\nmotion_sensor.reset_yaw(0)\n\n\nlog_on = True\n\ndef girar(velocidade):\n    motor_pair.move_tank(pair1,velocidade,-velocidade)\n\ndef angle():\n    return motion_sensor.tilt_angles()[0]\n\ndef sinal(a):\n    return 1 if a>=0 else -1\n\nif log_on:\n\n    arquivo_csv = open('//home//robot//PID_giroscopio.csv','w',newline='')\n    escritor_csv = csv.writer(arquivo_csv)\n    escritor_csv.writerow(['Tempo', 'P', 'I', 'D','Velocidade','Angulo'])\n    log_data = {\"tempo\": [], \"P\": [], \"I\": [], \"D\": [],\"U\":[],\"Ang\":[]}\n\n    def log(mensagem):\n\n        escritor_csv.writerow(mensagem[:])\n\n    def dados(tempo):\n        # Adiciona o tempo decorrido desde ti\n        log_data[\"tempo\"].append(tempo)\n        log_data[\"P\"].append(P)\n        log_data[\"I\"].append(I)\n        log_data[\"D\"].append(D)\n        log_data[\"U\"].append(U)\n        log_data[\"Ang\"].append(angle())\n\n\nsound = Sound()\nsound.beep()\n\nangulo_alvo = -720\ntol = 1\n\nerro = erro_i = angulo_alvo-angle()\n\n\nkp = 1\nki = 0.1\nkd = 0.01\ndt = 0.01\n\nP = kp*erro\nI=0\nD = kd*(erro-erro_i)/dt\nU = P+I+D\nU = sinal(erro)*min(abs(U)*100/720,100)\n\nti = time.perf_counter()\n\n\nwhile abs(erro)>tol:\n    t = time.perf_counter()\n    dados(t)\n    girar(U)\n    erro_i=erro\n    while(time.perf_counter()-t<dt):\n        continue\n\n    erro = angulo_alvo-angle()\n    P = kp*erro\n    I += ki*erro*dt\n    D = kd*(erro-erro_i)/dt\n    U = P+I+D\n\n    U = sinal(erro)*min(abs(U)*100/360,100)\n\nmotor_pair.stop(pair)\n\nt = time.perf_counter()\ndados(t)\n\n\nif log_on:\n    log_data[\"tempo\"].append(time.perf_counter())\n    log_data[\"P\"].append(P)\n    log_data[\"I\"].append(I)\n    log_data[\"D\"].append(D)\n    log_data[\"U\"].append(U)\n    log_data[\"Ang\"].append(angle())\n    for i in range(len(log_data[\"tempo\"])):\n\n        log([log_data['tempo'][i]-ti,log_data['P'][i],log_data['I'][i],log_data['D'][i],log_data['U'][i],log_data['Ang'][i]])\n    arquivo_csv.close()\n\nsound.beep()\n\ninput(\"Pressione Enter para encerrar...\")"}